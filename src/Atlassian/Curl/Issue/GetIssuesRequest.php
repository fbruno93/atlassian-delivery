<?php

namespace bfy\Atlassian\Curl\Issue;

use bfy\Atlassian\Curl\AbstractAtlassianCurl;
use bfy\Atlassian\Model\IssueGetResponse;
use bfy\Atlassian\Transformer\IssueGetDataTransformerObject;

/**
 * Class JiraCurl
 * Representative and functional class
 * for getting an issue
 */
class GetIssuesRequest extends AbstractAtlassianCurl
{
    // List of field must be in curl response
    private const PARAMS = "?fields=key,summary,labels,issuelinks";

    /** @var string[] */
    private array $jiras;

    /** @var resource[]  */
    private array $cJiras = [];

    /** @var resource */
    private $mh;

    /**
     * JiraCurl constructor.
     *
     * @param string[] $jiras
     */
    public function __construct(array $jiras)
    {
        parent::__construct();
        $this->jiras = $jiras;
    }

    protected function prepareRequest()
    {
        $this->mh = curl_multi_init();
        foreach ($this->jiras as $jira) {

            $ch = $this->initCurl();
            curl_setopt($ch, CURLOPT_URL, getenv('JIRA_API_URL').$jira.self::PARAMS);

            curl_multi_add_handle($this->mh,$ch);

            $this->cJiras[] = $ch;
        }
    }

    protected function sendRequest()
    {
        do {
            $status = curl_multi_exec($this->mh, $active);
            if ($active) {
                curl_multi_select($this->mh);
            }

        } while ($active && $status == CURLM_OK);
    }

    protected function readResponse(): array
    {
        $transformer = new IssueGetDataTransformerObject();
        $data = [];
        
        foreach ($this->cJiras as $cJira) {

            $strOutput = curl_multi_getcontent($cJira);
            $jsonOutput = json_decode($strOutput, true);

            $data[] = $transformer->transform($jsonOutput);
            curl_multi_remove_handle($this->mh, $cJira);
        }

        curl_multi_close($this->mh);

        return $data;
    }

    /**
     * @return IssueGetResponse[]
     */
    public function getData(): array
    {
        return parent::getData(); // TODO: Change the autogenerated stub
    }
}
